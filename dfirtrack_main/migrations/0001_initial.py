# Generated by Django 2.0.2 on 2018-03-20 14:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Analysisstatus",
            fields=[
                (
                    "analysisstatus_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("analysisstatus_name", models.CharField(max_length=30, unique=True)),
                ("analysisstatus_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Analystmemo",
            fields=[
                ("analystmemo_id", models.AutoField(primary_key=True, serialize=False)),
                ("analystmemo_note", models.TextField()),
                ("analystmemo_create_time", models.DateTimeField(auto_now_add=True)),
                ("analystmemo_modify_time", models.DateTimeField(auto_now=True)),
                (
                    "analystmemo_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="analystmemo_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "analystmemo_modified_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="analystmemo_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                ("case_id", models.AutoField(primary_key=True, serialize=False)),
                ("case_name", models.CharField(max_length=50, unique=True)),
                ("case_is_incident", models.BooleanField()),
                ("case_create_time", models.DateTimeField(auto_now_add=True)),
                (
                    "case_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="case_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                ("company_id", models.AutoField(primary_key=True, serialize=False)),
                ("company_name", models.CharField(max_length=50, unique=True)),
                ("company_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("contact_id", models.AutoField(primary_key=True, serialize=False)),
                ("contact_name", models.CharField(max_length=100)),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("contact_email", models.CharField(max_length=100, unique=True)),
                ("contact_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Division",
            fields=[
                ("division_id", models.AutoField(primary_key=True, serialize=False)),
                ("division_name", models.CharField(max_length=50, unique=True)),
                ("division_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                ("domain_id", models.AutoField(primary_key=True, serialize=False)),
                ("domain_name", models.CharField(max_length=100, unique=True)),
                ("domain_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Entry",
            fields=[
                ("entry_id", models.AutoField(primary_key=True, serialize=False)),
                ("entry_time", models.DateTimeField()),
                ("entry_sha1", models.CharField(blank=True, max_length=40, null=True)),
                ("entry_date", models.CharField(blank=True, max_length=10, null=True)),
                ("entry_utc", models.CharField(blank=True, max_length=8, null=True)),
                (
                    "entry_system",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("entry_type", models.CharField(blank=True, max_length=30, null=True)),
                ("entry_content", models.TextField(blank=True, null=True)),
                ("entry_note", models.TextField(blank=True, null=True)),
                ("entry_create_time", models.DateTimeField(auto_now_add=True)),
                ("entry_modify_time", models.DateTimeField(auto_now=True)),
                ("entry_api_time", models.DateTimeField(null=True)),
                (
                    "case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dfirtrack_main.Case",
                    ),
                ),
                (
                    "entry_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="entry_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "entry_modified_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="entry_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Headline",
            fields=[
                ("headline_id", models.AutoField(primary_key=True, serialize=False)),
                ("headline_name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ip",
            fields=[
                ("ip_id", models.AutoField(primary_key=True, serialize=False)),
                ("ip_ip", models.GenericIPAddressField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                ("location_id", models.AutoField(primary_key=True, serialize=False)),
                ("location_name", models.CharField(max_length=50, unique=True)),
                ("location_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Os",
            fields=[
                ("os_id", models.AutoField(primary_key=True, serialize=False)),
                ("os_name", models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Osarch",
            fields=[
                ("osarch_id", models.AutoField(primary_key=True, serialize=False)),
                ("osarch_name", models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Osimportname",
            fields=[
                (
                    "osimportname_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("osimportname_name", models.CharField(max_length=30, unique=True)),
                ("osimportname_importer", models.CharField(max_length=30)),
                (
                    "os",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dfirtrack_main.Os",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reason",
            fields=[
                ("reason_id", models.AutoField(primary_key=True, serialize=False)),
                ("reason_name", models.CharField(max_length=30, unique=True)),
                ("reason_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "recommendation_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("recommendation_name", models.CharField(max_length=30, unique=True)),
                ("recommendation_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Reportitem",
            fields=[
                ("reportitem_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "reportitem_subheadline",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("reportitem_note", models.TextField()),
                ("reportitem_create_time", models.DateTimeField(auto_now_add=True)),
                ("reportitem_modify_time", models.DateTimeField(auto_now=True)),
                (
                    "headline",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Headline",
                    ),
                ),
                (
                    "reportitem_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reportitem_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reportitem_modified_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reportitem_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Serviceprovider",
            fields=[
                (
                    "serviceprovider_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("serviceprovider_name", models.CharField(max_length=50, unique=True)),
                ("serviceprovider_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="System",
            fields=[
                ("system_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "system_uuid",
                    models.UUIDField(editable=False, null=True, unique=True),
                ),
                ("system_name", models.CharField(max_length=50)),
                ("system_fqdn", models.CharField(blank=True, max_length=50, null=True)),
                ("system_install_time", models.DateTimeField(blank=True, null=True)),
                ("system_lastbooted_time", models.DateTimeField(blank=True, null=True)),
                ("system_deprecated_time", models.DateTimeField(blank=True, null=True)),
                ("system_is_vm", models.NullBooleanField()),
                ("system_create_time", models.DateTimeField(auto_now_add=True)),
                ("system_modify_time", models.DateTimeField()),
                ("system_api_time", models.DateTimeField(null=True)),
                (
                    "analysisstatus",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Analysisstatus",
                    ),
                ),
                ("case", models.ManyToManyField(blank=True, to="dfirtrack_main.Case")),
                (
                    "company",
                    models.ManyToManyField(blank=True, to="dfirtrack_main.Company"),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Contact",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Domain",
                    ),
                ),
                (
                    "host_system",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.System",
                    ),
                ),
                ("ip", models.ManyToManyField(blank=True, to="dfirtrack_main.Ip")),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Location",
                    ),
                ),
                (
                    "os",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Os",
                    ),
                ),
                (
                    "osarch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Osarch",
                    ),
                ),
                (
                    "reason",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Reason",
                    ),
                ),
                (
                    "recommendation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Recommendation",
                    ),
                ),
                (
                    "serviceprovider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Serviceprovider",
                    ),
                ),
                (
                    "system_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="system_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "system_modified_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="system_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Systemstatus",
            fields=[
                (
                    "systemstatus_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("systemstatus_name", models.CharField(max_length=30, unique=True)),
                ("systemstatus_note", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Systemtype",
            fields=[
                ("systemtype_id", models.AutoField(primary_key=True, serialize=False)),
                ("systemtype_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Systemuser",
            fields=[
                ("systemuser_id", models.AutoField(primary_key=True, serialize=False)),
                ("systemuser_name", models.CharField(max_length=50)),
                (
                    "systemuser_lastlogon_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dfirtrack_main.System",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tagcolor",
            fields=[
                ("tagcolor_id", models.AutoField(primary_key=True, serialize=False)),
                ("tagcolor_name", models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("task_id", models.AutoField(primary_key=True, serialize=False)),
                ("task_note", models.TextField(blank=True, null=True)),
                ("task_scheduled_time", models.DateTimeField(blank=True, null=True)),
                ("task_started_time", models.DateTimeField(blank=True, null=True)),
                ("task_finished_time", models.DateTimeField(blank=True, null=True)),
                ("task_due_time", models.DateTimeField(blank=True, null=True)),
                ("task_create_time", models.DateTimeField(auto_now_add=True)),
                ("task_modify_time", models.DateTimeField(auto_now=True)),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dfirtrack_main.Task",
                    ),
                ),
                (
                    "system",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dfirtrack_main.System",
                    ),
                ),
                ("tag", models.ManyToManyField(blank=True, to="dfirtrack_main.Tag")),
                (
                    "task_assigned_to_user_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="task_assigned_to",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task_created_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="task_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task_modified_by_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="task_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Taskname",
            fields=[
                ("taskname_id", models.AutoField(primary_key=True, serialize=False)),
                ("taskname_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Taskpriority",
            fields=[
                (
                    "taskpriority_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("taskpriority_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Taskstatus",
            fields=[
                ("taskstatus_id", models.AutoField(primary_key=True, serialize=False)),
                ("taskstatus_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name="task",
            name="taskname",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Taskname",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="taskpriority",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Taskpriority",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="taskstatus",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Taskstatus",
            ),
        ),
        migrations.AddField(
            model_name="tag",
            name="tagcolor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Tagcolor",
            ),
        ),
        migrations.AddField(
            model_name="system",
            name="systemstatus",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Systemstatus",
            ),
        ),
        migrations.AddField(
            model_name="system",
            name="systemtype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="dfirtrack_main.Systemtype",
            ),
        ),
        migrations.AddField(
            model_name="system",
            name="tag",
            field=models.ManyToManyField(blank=True, to="dfirtrack_main.Tag"),
        ),
        migrations.AddField(
            model_name="reportitem",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="dfirtrack_main.System"
            ),
        ),
        migrations.AddField(
            model_name="entry",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="dfirtrack_main.System"
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="division",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dfirtrack_main.Division",
            ),
        ),
        migrations.AddField(
            model_name="analystmemo",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="dfirtrack_main.System"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="systemuser",
            unique_together={("system", "systemuser_name")},
        ),
        migrations.AlterUniqueTogether(
            name="system",
            unique_together={("system_name", "domain", "system_install_time")},
        ),
        migrations.AlterUniqueTogether(
            name="reportitem",
            unique_together={("system", "headline", "reportitem_subheadline")},
        ),
        migrations.AlterUniqueTogether(
            name="entry",
            unique_together={("system", "entry_sha1")},
        ),
    ]
